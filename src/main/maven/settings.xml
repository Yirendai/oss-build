<?xml version="1.0" encoding="UTF-8"?>
<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                        http://maven.apache.org/xsd/settings-1.0.0.xsd">

    <localRepository>${user.home}/.m2/repository</localRepository>
    <interactiveMode/>
    <usePluginRegistry/>
    <offline/>

    <proxies>
    </proxies>

    <mirrors>
        <!-- mirrorOf: pom.xml repositories repository id -->
        <mirror>
            <id>nexus.local-mirror</id>
            <name>local nexus mirror</name>
            <url>${nexus.local.mirror}</url>
            <!--mirrorOf>central,spring-libs-release,spring-milestone,spring-libs-snapshot,conjars.org,clojars.org,org.jboss.repository,codehaus-mule-repo,repo.jenkins-ci.org</mirrorOf-->
            <mirrorOf>external:*</mirrorOf>
        </mirror>
        <!--mirror>
            <id>internal-nexus-mirror</id>
            <name>internal nexus mirror</name>
            <url>${internal-nexus.mirror}</url>
            <mirrorOf>external:*</mirrorOf>
        </mirror-->
        <!--mirror>
            <id>chinaOS</id>
            <name>OSChina Central</name>
            <url>http://maven.oschina.net/content/groups/public/</url>
            <mirrorOf>central</mirrorOf>
        </mirror-->
    </mirrors>

    <servers>
        <server>
            <id>gpg.passphrase</id>
            <passphrase>${build.gpg.passphrase}</passphrase>
        </server>
        <server>
            <id>github-yourusername</id>
            <username>github_account_email</username>
            <password>plain_or_encrypted_github_account_password</password>
        </server>
        <!-- see: http://maven.apache.org/guides/mini/guide-encryption.html -->
        <!-- mvn &#x002d;&#x002d;encrypt-password ${password} -->
        <!-- accept RSA key fingerprint -->
        <!-- ssh -o UserKnownHostsFile=~/.ssh/known_hosts root@local-mvnsite -p 10022 -->
        <server>
            <id>nexus.local-releases</id>
            <username>deployment</username>
            <password>{L70pFo7kvgoHK3T/sD64ZmfhkyKXPShRU0sJG0PXNWc=}</password>
        </server>
        <server>
            <id>nexus.local-snapshots</id>
            <username>deployment</username>
            <password>{L70pFo7kvgoHK3T/sD64ZmfhkyKXPShRU0sJG0PXNWc=}</password>
        </server>
        <server>
            <id>nexus.local-thirdparty</id>
            <username>deployment</username>
            <password>{L70pFo7kvgoHK3T/sD64ZmfhkyKXPShRU0sJG0PXNWc=}</password>
        </server>
        <server>
            <id>local-mvnsite</id>
            <!--username>root</username>
            <password>root</password-->
            <!--username>root</username>
            <privateKey>${user.home}/.ssh/local-mvnsite</privateKey-->
            <username>deployment</username>
            <password>{L70pFo7kvgoHK3T/sD64ZmfhkyKXPShRU0sJG0PXNWc=}</password>
            <configuration>
                <!-- see: https://maven.apache.org/wagon/apidocs/index.html -->
                <!-- java.lang.ClassNotFoundException: org.apache.maven.wagon.providers.ssh.knownhost.NullKnownHostProvider -->
                <!--knownHostsProvider implementation="org.apache.maven.wagon.providers.ssh.knownhost.NullKnownHostProvider">
                    <hostKeyChecking>no</hostKeyChecking>
                </knownHostsProvider-->
            </configuration>
        </server>
        <server>
            <id>internal-nexus-releases</id>
            <username>deployment</username>
            <password>{RJzAlz+tw54HBhZ3IBzFCuNQY2Wyzqv2EonquIV7hdE=}</password>
        </server>
        <server>
            <id>internal-nexus-snapshots</id>
            <username>deployment</username>
            <password>{RJzAlz+tw54HBhZ3IBzFCuNQY2Wyzqv2EonquIV7hdE=}</password>
        </server>
        <server>
            <id>internal-nexus-thirdparty</id>
            <username>deployment</username>
            <password>{RJzAlz+tw54HBhZ3IBzFCuNQY2Wyzqv2EonquIV7hdE=}</password>
        </server>
        <server>
            <id>internal-mvnsite</id>
            <username>root</username>
            <!--passphrase>if required</passphrase-->
            <privateKey>${user.home}/.ssh/id_rsa</privateKey>
            <configuration>
                <!-- see: https://maven.apache.org/wagon/apidocs/index.html -->
                <!-- java.lang.ClassNotFoundException: org.apache.maven.wagon.providers.ssh.knownhost.NullKnownHostProvider -->
                <!--knownHostsProvider implementation="org.apache.maven.wagon.providers.ssh.knownhost.NullKnownHostProvider">
                    <hostKeyChecking>no</hostKeyChecking>
                </knownHostsProvider-->
            </configuration>
        </server>
    </servers>

    <activeProfiles>
        <activeProfile>${infrastructure}-infrastructure</activeProfile>
    </activeProfiles>

    <pluginGroups>
        <pluginGroup>org.apache.maven.plugins</pluginGroup>
        <pluginGroup>org.codehaus.mojo</pluginGroup>
        <pluginGroup>org.sonarsource.scanner.maven</pluginGroup>
    </pluginGroups>

    <profiles>
        <profile>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <gpg.keyname>${build.gpg.keyname}</gpg.keyname>
            </properties>
        </profile>
        <profile>
            <id>local-infrastructure</id>
            <properties>
                <sonar.host.url>${local-sonar.host.url}</sonar.host.url>
            </properties>
            <repositories>
                <repository>
                    <id>nexus.local-releases</id>
                    <name>local nexus releases</name>
                    <url>${nexus.local.repositories}/maven-releases/</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>false</enabled></snapshots>
                </repository>
                <repository>
                    <id>nexus.local-snapshots</id>
                    <name>local nexus snapshots</name>
                    <url>${nexus.local.repositories}/maven-snapshots/</url>
                    <releases><enabled>false</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                </repository>
                <repository>
                    <id>nexus.local-thirdparty</id>
                    <name>local nexus thirdparty</name>
                    <url>${nexus.local.repositories}/maven-thirdparty/</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>nexus.local-releases</id>
                    <name>local nexus releases</name>
                    <url>${nexus.local.repositories}/maven-releases/</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>false</enabled></snapshots>
                </pluginRepository>
                <pluginRepository>
                    <id>nexus.local-snapshots</id>
                    <name>local nexus snapshots</name>
                    <url>${nexus.local.repositories}/maven-snapshots/</url>
                    <releases><enabled>false</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                </pluginRepository>
                <pluginRepository>
                    <id>nexus.local-thirdparty</id>
                    <name>local nexus thirdparty</name>
                    <url>${nexus.local.repositories}/maven-thirdparty/</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                </pluginRepository>
            </pluginRepositories>
        </profile>
        <profile>
            <id>internal-infrastructure</id>
            <properties>
                <sonar.host.url>${internal-sonar.host.url}</sonar.host.url>
            </properties>
            <repositories>
                <repository>
                    <id>internal-nexus-releases</id>
                    <name>internal nexus releases</name>
                    <url>${internal-nexus.repositories}/releases/</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>false</enabled></snapshots>
                </repository>
                <repository>
                    <id>internal-nexus-snapshots</id>
                    <name>internal nexus snapshots</name>
                    <url>${internal-nexus.repositories}/snapshots/</url>
                    <releases><enabled>false</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                </repository>
                <repository>
                    <id>internal-nexus-thirdparty</id>
                    <name>internal nexus thirdparty</name>
                    <url>${internal-nexus.repositories}/thirdparty/</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>internal-nexus-releases</id>
                    <name>internal nexus releases</name>
                    <url>${internal-nexus.repositories}/releases/</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>false</enabled></snapshots>
                </pluginRepository>
                <pluginRepository>
                    <id>internal-nexus-snapshots</id>
                    <name>internal nexus snapshots</name>
                    <url>${internal-nexus.repositories}/snapshots/</url>
                    <releases><enabled>false</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                </pluginRepository>
                <pluginRepository>
                    <id>internal-nexus-thirdparty</id>
                    <name>internal nexus thirdparty</name>
                    <url>${internal-nexus.repositories}/thirdparty/</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                </pluginRepository>
            </pluginRepositories>
        </profile>
    </profiles>
</settings>
